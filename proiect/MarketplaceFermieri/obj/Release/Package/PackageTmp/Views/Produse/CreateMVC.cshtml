@model ViewModels.CreateProdusViewModelCuDropdown

@{
    ViewBag.Title = "CreateMVC";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Produs</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.numeProdus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.numeProdus, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.numeProdus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.descriereProdus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.descriereProdus, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.descriereProdus, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pret, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.pret, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pret, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.unitateDeMasura, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.unitateDeMasura, Model.unitatiDeMasura, "Selecteaza o unitate de masura", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.unitateDeMasura, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.cantitate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.cantitate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.cantitate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.imagine, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.imagine, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.imagine, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idVanzator, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.idVanzator, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.idVanzator, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "IndexMVC")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
